# prod/docker-compose.yml
services:
  prod_server:
    container_name: tienhock_prod_server
    build:
      context: ..
      dockerfile: prod/Dockerfile.server
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DB_USER=postgres
      - DB_HOST=prod_db
      - DB_NAME=tienhock_prod
      - DB_PASSWORD=foodmaker
      - DB_PORT=5432
    env_file:
      - .env.production
    depends_on:
      - prod_db
    restart: always
    networks:
      - tienhock-prod-network
    volumes:
      - ../logs:/usr/src/app/logs

  prod_db:
    container_name: tienhock_prod_db
    image: postgres:16
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=foodmaker
      - POSTGRES_DB=tienhock_prod
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    networks:
      - tienhock-prod-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  tienhock-prod-network:
    name: tienhock-prod-network
    driver: bridge

volumes:
  postgres_prod_data:
    name: tienhock_prod_data
