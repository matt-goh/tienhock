# prod/docker-compose.yml
services:
  prod_server:
    container_name: tienhock_prod_server
    build:
      context: ..
      dockerfile: prod/Dockerfile.server
    ports:
      - "192.168.1.200:5000:5000"
    environment:
      - REACT_APP_NODE_ENV=production
      - REACT_APP_SERVER_HOST=192.168.1.200 # For display and client connections
      - DB_USER=postgres
      - DB_HOST=prod_db
      - DB_NAME=tienhock_prod
      - DB_PASSWORD=foodmaker
      - DB_PORT=5432
      - HOST=0.0.0.0 # Inside container, listen on all interfaces
    depends_on:
      - prod_db
    networks:
      tienhock-prod-network:
        aliases:
          - server
    volumes:
      - ../logs:/usr/src/app/logs

  prod_db:
    container_name: tienhock_prod_db
    image: postgres:16
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=foodmaker
      - POSTGRES_DB=tienhock_prod
      - POSTGRES_HOST_AUTH_METHOD=md5
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
    ports:
      - "192.168.1.200:5433:5432"
    networks:
      tienhock-prod-network:
        aliases:
          - database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  tienhock-prod-network:
    name: tienhock-prod-network
    driver: bridge

volumes:
  postgres_prod_data:
    name: tienhock_prod_data
